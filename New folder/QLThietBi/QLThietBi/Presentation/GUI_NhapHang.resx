<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThem.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>